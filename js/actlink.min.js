/**
 * ownCloud - Internal Bookmarks plugin
 *
 * @author Xavier Beurois
 * @copyright 2012 Xavier Beurois www.djazz-lab.net
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
 * License as published by the Free Software Foundation; either 
 * version 3 of the License, or any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU AFFERO GENERAL PUBLIC LICENSE for more details.
 *  
 * You should have received a copy of the GNU Lesser General Public 
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * 
 */


if (!OCA.intBookmarks) {
  OCA.intBookmarks = {};
}


OCA.intBookmarks.App = {
  _bkFileList: null,
  initialize: function($el,target){
  	
		var fileActions = new OCA.Files.FileActions();
		// default actions
		fileActions.registerDefaultActions();
		// legacy actions
		fileActions.merge(window.FileActions);
		// regular actions
		fileActions.merge(OCA.Files.fileActions);
  	
		this._bkFileList = new OCA.Files.FileList($el, {fileActions: fileActions, allowLegacyActions: true});
		this._bkFileList.changeDirectory(target);
		return this._bkFileList;
  }
};

function getParam(href, key) {
  var results = new RegExp('[\?&]' + key + '=([^&#]*)').exec(href);
  if (results==null){
     return '';// null;
  }
  else{
     return results[1] || 0;
  }
}

function getGetParam(key) {
  return this.getParam(window.location.href, key);
}

function updateBookmarks(){
  $.ajax({
		url: OC.filePath('internal_bookmarks', 'ajax', 'list.php'),
		async: false,
		success: function(response) {
			if(response){
				var bookmarks = '';
				$.each( response, function(key,value) {
					var file_id = getParam(value.bktarget, 'id');
					var owner = getParam(value.bktarget, 'owner');
					var group = getParam(value.bktarget, 'group');
					var path = value.bktarget.replace(/&.*$/, '');
					var uri = OC.webroot+'/index.php/apps/files/?dir='+value.bktarget.replace(/group=/, 'view=user-groups_');
					bookmarks = bookmarks+'<li data-id="internal-bookmarks_'+value.bkid+'" data-file_id="'+file_id+
					'" data-owner="'+owner+'" data-group="'+group+'" data-bktarget="'+value.bktarget+'" data-path="'+path+'">'+
						'<a href="'+uri+'"><i class="icon icon-folder deic_green"></i><span>'+value.bktitle+'</span></a></li>';
				});
				$('.nav-sidebar li[data-id^="internal-bookmarks"]').remove();
				$('ul.nav-sidebar li[data-id="files_index"]').after(bookmarks);
				if($('ul.nav-sidebar li#places span i.icon-angle-right').is(':visible')){
					$('ul.nav-sidebar li[data-id^="internal-bookmarks"]').hide();
				}
			}
		}
  });
}

$(document).ready(function(){

  updateBookmarks();


  if(typeof FileActions!=="undefined"){
	FileActions.register(
		"dir",
		"bookmark", 
		OC.PERMISSION_READ,
		OC.imagePath("internal_bookmarks","star_off.png"),
		function(d, context){
		  var group = context.fileList.getGroup();
		  var $tr = context.$file;
		  var owner = $tr.data('share-owner-uid');
		  var id = $tr.data('id');
		  var r = encodeURIComponent($tr.data('path')+"/"+d)+
		  	(!group&&owner&&id?'&owner='+owner+'&id='+id:'')+
		  	(group?'&group='+encodeURIComponent(group)/*.replace( /(:|\.|\[|\]|,|=)/g, "\\$1" )*/:'');
		  //alert(group+':'+owner+':'+id);
		  $.ajax({type:"POST",
				url:OC.linkTo("internal_bookmarks","ajax/set.php"),
				dataType:"json",
				data:{c:r},
				async:false,
				success:function(k){
					updateBookmarks();		
				}
			});
		});
	}

  $('ul.nav-sidebar').on('click', 'li[data-id^="internal-bookmarks"]', function(e) {
		$('ul.nav-sidebar').find('.active').removeClass('active');	
		$(this).children('a').addClass('active');
		/*if($('#app-navigation').length!==0){
			$('#app-navigation ul li[data-id="'+$(this).attr('data-id')+'"] a').click();
		}
		else {
			window.location.href = "/index.php/apps/files?dir="+ $(this).attr('data-path');;
		}*/
		e.stopPropagation();
		e.preventDefault();
		if(typeof OCA.Files != 'undefined' && OCA.Files.App != 'undefined'){
			var view;
			if($(this).attr('data-group')){
				var group = $(this).attr('data-group').replace( /(:|\.|\[|\]|,|=)/g, "\\$1" );
				view = 'user-groups_'+group;
				OCA.Files.App.setActiveView(view, {silent: true});
			  OCA.UserGroups.App.initGroupFileList($('#app-content-user-groups_'+group)[0]);
			}
			else{
				view = 'files';
				OCA.Files.App.setActiveView(view, {silent: true});
			}
			OCA.intBookmarks.App.bktarget = $(this).attr('data-bktarget');
			OCA.Files.App.fileList.changeDirectory($(this).attr('data-path'), true, true,
					$(this).attr('data-file_id'), $(this).attr('data-owner'), $(this).attr('data-group'),
					// callback
					function(path, id, owner, group){
						OC.dialogs.confirm('This bookmark points to a folder that no longer exists: '+
								OCA.intBookmarks.App.bktarget+'. Would you like to delete it?', 'Confirm delete',
						function(res){
							if(res){
							  $.ajax({type:"POST",
									url:OC.linkTo("internal_bookmarks","ajax/set.php"),
									dataType:"json",
									data:{c:OCA.intBookmarks.App.bktarget},
									async:false,
									success:function(k){
										updateBookmarks();		
									}
								});
							}
						},
						false
						);
						return true;
				});
			if(!$(this).attr('data-group') && $(this).attr('data-owner')){
				var oldcrumb = $("div[id^='app-content']:not('.hidden') #breadcrumb-container .breadcrumb").clone();
				OCA.Files.App.fileList.fixSharingInLinks(oldcrumb);
				OC.Util.History.pushState('dir='+getGetParam('dir')+'&owner=' +  $(this).attr('data-owner')+'&id=' +  $(this).attr('data-file_id'));
			}
			//alert($(this).attr('data-path')+'-->'+$('#app-content-'+view+' #dir').val());
		}
		else{
			window.location.href = "/index.php/apps/files?dir="+ $(this).attr('data-uri')+"&view=bookmark&data-id="+
			$(this).attr('data-id');
		}
	});

  $('[id^="app-content-internal-bookmarks"]').on('show', function(e) {
		var target = e.target.getAttribute('id').split('_');
		$.ajax({
			url: OC.filePath('internal_bookmarks', 'ajax', 'getbyID.php'),
			data: {c:target[1]},
			type:"POST",
			success: function( response ){
				OCA.intBookmarks.App.initialize($(e.target),response[0]['bktarget']);
			}
		});
  });
});
